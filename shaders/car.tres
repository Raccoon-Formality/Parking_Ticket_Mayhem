[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=6]
code = "shader_type spatial;

uniform sampler2D noise;
uniform float alpha : hint_range(0, 1);

void fragment() {
	vec4 noise_tex = texture(noise,UV);
	vec3 pass1 = vec3(noise_tex.r,noise_tex.r/2.0,0.0);
	vec3 pass2 = vec3(1.0,0.0,0.0);
	ALPHA = alpha;
	ALBEDO = noise_tex.rgb;

//	if (alpha == 1.0) {
//		ALBEDO = clamp(pass2 + pass1,vec3(0,0,0),vec3(1,1,1));
//	}
//	else {
//		
//	}
}"

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=8]
noise = SubResource( 7 )

[resource]
shader = SubResource( 6 )
shader_param/alpha = 0.0
shader_param/noise = SubResource( 8 )
